{"name":"Amplishot","tagline":"Amplicon-Shotgun","body":"Currently microbial community profiling sudies rutienly use 454\r\npyrosequencing to generate 10,000 - 100,000 reads from particular \r\nvariable regions of the 16S rRNA gene.  Unfortunately 454 pyrosequencing \r\nhas a number of short falls such as homopolymer errors.  Furthermore\r\ntaxonomic resolution can be lost when using 454 pyrosequencing due\r\nto the smaller fragment of the 16S rRNA gene that is being analyzed.\r\n*Amplishot* combines amplification of the full 16S rRNA gene sequence\r\nwith *de novo* reconstruction of full-length 16S rRNA genes from specially\r\nconstructed \"Amplishot\" Illumina sequencing libraries. \r\n## Dependancies\r\n*   [Qiime](http://qiime.org) - tested only on version 1.6.0\r\n*\t[bowtie2](http://bowtie-bio.sourceforge.net/bowtie2/index.shtml) - tested with version 2.0.5\r\n*\t[cd-hit](http://cd-hit.org) - tested with 4.5.4\r\n*\t[pandaseq](https://github.com/neufeld/pandaseq) - test with version 2.3\r\n\r\n### Assembly Dependancies\r\nYou must have one of the following\r\n*\t[phrap](http://www.phrap.org/) - tested with version 1.09518\r\n*   [fermi](https://github.com/lh3/fermi) - tested with version 1.1\r\n\r\n## Installation\r\nYou can either download the [latest source code](https://github.com/ctSkennerton/Amplishot)\r\n or a [particular version](https://github.com/ctSkennerton/Amplishot/tags) from github.\r\nOnce downloaded change into the Amplishot directory and run the following:\r\n \r\n\t [sudo] python setup.py install\r\n \r\nor if you do not have sudo on your computer use the `--prefix` option to change\r\nthe installation directory.\r\n\r\n## Command-line interface  \r\nAmplishot has a single executable called `amplishot`; you can see some basic help\r\nby running the command `amplishot -h`.\r\nThe command-line options for Amplishot only offer a subset of the options that are \r\navailable.  Most options are changed by using a configuration file.  The Amplishot \r\nconfiguration file is written in [YAML](http://yaml.org), which is a simple markup \r\nlanguage; before you try to modify the configuration file it might be helpful to \r\nread up on the YAML [syntax](http://yaml.org/spec/1.1/).\r\nCommand-line options and a configuration file can be used in tandum.  Any options\r\nspecified on the command-line will **overwrite** the corresponding value in the\r\nconfiguration file.  If changes have been made to a configuration by using \r\ncommand-line options, a new configuration file will be outputted to the global\r\noutput directory with a datetime signature so that no previous configuration details\r\nare lost.  A new configuration file will not be outputted if there are no changes\r\nto the current configuration set.\r\n\r\n### Configuration options and their values\r\n*\t`threads`: Sets the number of threads/processes to use in the Amplishot pipeline. \r\n   \tThe value should be a single integer number (default: 1)\r\n*\t`log_level`: Changes the verbosity of logging messages.  The options from most \r\n   \tverbose to least are: DEBUG, INFO, WARN, ERROR, CRITICAL (default: INFO)\r\n*\t`log_file`: Give the **full** filepath to output all logging messages.  \r\n   \tBy default logging is output to the terminal in the STDERR stream.  \r\n*\t`output_directory`: This is the directory where all results will be outputted.  \r\n   \tBy default it is the current directory, symbolized by a '.' character\r\n*\t`input_raw_reads`: This must be a list of files raw Illumina sequencing read files\r\n   \tto input into Amplishot.  The format of the input reads must be a *list-of-lists*,\r\n   \twhich can be added to the configuration in two ways:\r\n        \r\n\t\tinput_raw_reads:\r\n\t        - [/full/path/to/sample1.1.fq, /full/path/to/sample1.2.fq]\r\n\t\t    - [/full/path/to/sample2.1.fq, /full/path/to/sample2.2.fq]\r\n\t\t   \r\n\t\tinput_raw_reads:\r\n\t\t\t- \r\n\t\t\t    - /full/path/to/sample1.1.fq\r\n\t\t\t\t- /full/path/to/sample1.2.fq\r\n\t\t\t-\r\n\t\t\t\t- /full/path/to/sample2.1.fq\r\n\t\t\t\t- /full/path/to/sample2.2.fq\r\n\t\t\t\t\r\n*\t`pairtig_read_files`: Input pairtig files to use for Amplishot.  This option is\r\n\tmutually exclusive with `input_raw_reads`.  By using this option you can generate\r\n\tpairtigs outside of Amplishot\r\n*\t`aliases`: Use this option to set the sample names to be used in the output files.\r\n\tBy default the filename is used without the file extension.  The form of the values\r\n\tmust be a YAML list specified by either:\r\n\t\r\n\t\taliases:\r\n\t\t\t- alias1\r\n\t\t\t- alias2\r\n\t\t\r\n\t\taliases: [alias1, alias2]\r\n\r\n*\t`minimum_pairtig_length`: Specify the minimum length that pairtigs must be.  This \r\n\t\taliases:\r\n\t\t\t- alias1\r\n\t\t\t- alias2\r\n\t\t\r\n\t\taliases: [alias1, alias2]\r\n\r\n*\t`minimum_pairtig_length`: Specify the minimum length that pairtigs must be.  This \r\n\toption has no effect if the `pairtig_read_files` option is set. (default: 350)\r\n*\t`pair_overlap_length`: The minimum number of nucleotides that two reads from a \r\n\tpair must overlap by to generate a pairtig. (default: 30)\r\n*\t`mapper`: The name of the short read aligner used in Amplishot.  Currently only\r\n\tbowtie2 is implemented and therefore the only valid value for this option is\r\n\tbowtie\r\n*\t`mapper_database`: Give the **full** filepath to an index file generated by the\r\n\tshort read mapper\r\n*\t`taxonomy_file`: the name of the file containing a mapping between the reference\r\n\tsequences and their taxon strings\r\n*\t`mapping_similarity_cutoffs`: A list of required similarity between a reference sequence\r\n\tand a pairtig. Reads will be segregated into a band of similarity\r\n    and assembled separately in that band \r\n*\t`taxon_coverage`: list of two integer numbers that determine whether there are \r\n\tenough reads for assembly.  The first number must be the minimum coverage (vertical\r\n\tread depth) for a taxon; the second number is the number of bases that must \r\n\tcontain the minimum coverage. (default: [2, 1000])\r\n*\t`read_clustering_method`: method of reducing excess coverage after taxonomic\r\n\tsegregation but before assembly. There is currently only one option `cdhit`\r\n*\t`read_clustering_similarity`: sequence similarity between two reads to be clustered\r\n\ttogether\r\n*\t`cdhit_max_memory`: maximum memory allowed for cdhit - does not apply to other \r\n\treduction methods. (default: 1000)\r\n*\t`assembly_method`: *de novo* 16S reconstruction method.  The only valid\r\n\tvalues are `phrap` and  `fermi`\r\n*\t`assemble_unknowns`: choose whether to assemble reads that do not map to any \r\n\treference sequence. May be *very slow* when using phrap as the assembly method.\r\n\tValid values are: yes, no, true, false\r\n*\t`minimum_reconstruction_length`: minimum length of sequences that are defined \r\n\tas 'full length' and used in taxonomic assignment.\r\n*\t`otu_clustering_method`: Currently the only valid value is `cdhit`\r\n*\t`otu_clustering_similarity`: the similarity used for clustering full-length \r\n\tsequences from different samples into OTUs \r\n*\t`normalize_otu_table`: output a normalized OTU table as well as non-normalized.\r\n\tValid values are: yes, no, true, false\r\n\r\n### Program related blocks\r\nSome of the underlying programs used in Amplishot can be controlled precisely by\r\nspecifying a *block* in the configuration file containing options specific \r\nto that program.  Each of these blocks is specified with a key that is identical\r\nto the program name; within each block are program specific key-value pairs.  \r\nThe program specific key-value pairs must be indented by 4 spaces ( **not tabs** ),\r\nthis indentation must be consistent throughout the entire configuration file.\r\nCurrently program related blocks are available for both the assembly and \r\ntaxonomy assignment parts of Amplishot\r\n\r\n#### Assembly \r\n\r\n##### Fermi\r\nSpecify options using the `fermi` key.\r\n*   `kmer_length`: The kmer length used for assembly. The bigger the\r\n    number the more stringent the assembly.  \r\n\r\n##### Phrap\r\n Specify extra options\r\nusing the `phrap` key.  Any of the command-line options available in phrap \r\n(listed [here](http://www.phrap.org/phredphrap/phrap.html)) can be used as the keys\r\nin the phrap block, however you must not add in the dash (-) prefix for the options.\r\nFor example to modify stringency of the assembly, you could change the scoring matrix:\r\n\r\n\tphrap:\r\n\t\tpenalty: -9\r\n\t\tgap_ext: -11\r\n\t\tgap_init: -12\r\n\t\tminscore: 350\r\n\r\nJust because you can do this does not mean that you should unless you know exactly\r\nwhat you are doing or are experimenting when Amplishot is producing sub-standard\r\nresults.  The scoring matrix and other assembly parameters used in phrap have \r\nalready been altered to generate accurate 16S assemblies, so the default\r\nsettings should work well.\r\n\r\n\r\n#### Taxonomy Assignment\r\nTaxonomy assignment is handled in Amplishot after the reconstruction of full-length\r\n16S sequences has occurred.  There are a number of different methods for taxonomic\r\nassignment that include some of those available in Qiime 1.6.0. The taxonomy \r\nassignment method is determined from the Amplishot configuration file with the\r\n`assign_taxonomy_method` key.  By default the Bowtie2 taxonomy assigner is used.\r\nThe valid values for each classifier are shown below:\r\n- `bowtie` for bowtie2 based assigner\r\n- `blast` for Qiime blastall based assigner \r\n- `rdp` for RDP classifier\r\n- `mothur` for Mothur classifier\r\n\r\n#### Configuration File options\r\n\r\nFor all taxonomy assigners a special block can be given in the configuration file\r\nfor specific options.  The key to this block must be the same as the value of \r\nthe `assign_taxonomy_method` key.  For example to use the blast taxon assigner the\r\nfollowing code could be added into the configuration file:\r\n\r\n    assign_taxonomy_method: blast\r\n    blast:\r\n        evalue: 1e-50\r\n        blast_db: /full/path/to/blast/database\r\n\r\n#### Options specific to all taxon assigners\r\n- `id_to_taxonomy_fp`: **Full** path to file containing a mapping between reference\r\nsequences and their respective taxon strings.  By default all taxon assigners will\r\nuse the  value of the `taxonomy_file` key.  This option should only be used if \r\ndifferent reference sequence set is being used for taxonomy assignment \r\n- `reference_sequences_fp`: **Full** path to file containing reference sequences\r\n\r\n##### Bowtie\r\n- `index`: **Full** file path to bowtie2 formatted index file for the reference sequences.  \r\nBy default the bow tie taxonomic assigner will use the value of the `mapper_database` \r\nkey, however a different database file can be accessed  here for taxonomic assignment\r\n- `threads`: specify the number of threads that bowtie can use \r\n- `percentId`: The minimum percent identity that a representative sequence must map with, \r\nany sequence below this threshold will not be given a taxonomy\r\n\r\n##### Blast\r\n- `blast_db`: **Full** file path to the file containing the blast database that must\r\nbe formatted using the `formatdb` utility for nucleotide sequences.  Do **not** add in\r\nthe file extensions usually associated with blast databases. e.g. `.nsq`, `.nin` etc.\r\n- `evalue`: The maximum allowable e-value allowed for a given match.  If no match can\r\nbe found below this score, then a representative sequence will not be given a\r\ntaxonomic assignment.\r\n\r\n##### Mothur\r\n- `Confidence`: Minimum allowed confidence score for taxonomic assignment\r\n\r\n##### RDP\r\n- `Confidence`: Minimum allowed confidence score allowed for taxonomic assignment\r\n- `max_memory`: Set the maximum memory allowed for the RDP java virtual machine\r\n- `training_data_properties_fp`: **Full** path to a file containing pre-compiled \r\ntraining data.  \r\nThis option is overridden if both the `reference_sequences_fp` and \r\n`id_to_taxonomy_fp` keys are set.\r\n\r\n### Example Configuration file\r\n```yaml\r\n    ---\r\n    threads: 5\r\n    log_level: INFO\r\n    log_file: null\r\n    minimum_pairtig_length: 350 # minimum length of the overlapped pairs\r\n    pair_overlap_length: 30 # mimimum length of the overlap\r\n    mapper: bowtie # program used for read mapping \r\n    mapping_similarity_cutoffs: [0.85, 0.90, 0.95, 0.98] # the sequence similarity required between the reference database and the reads\r\n    taxon_coverage: [2, 1000] # list of two numbers. The first is the minimum coverage, the second is the number of bases that need to be covered\r\n    read_clustering_method: cdhit\r\n    read_clustering_similarity: 0.98 # sequence similarity between two reads to be clustered together\r\n    cdhit_max_memory: 1000 # maximum memory allowed for cdhit - does not apply to other reduction methods\r\n    assembly_method: fermi # choose a genome assembler  \r\n    preassemble_clustering: true\r\n    assemble_unknowns: true # choose whether to assemble reads that had no match during mapping. (VERY SLOW WITH PHRAP)\r\n    minimum_reconstruction_length: 1000 # minimum length of sequences that we define as 'full length'\r\n    otu_clustering_method: cdhit\r\n    otu_clustering_similarity: 0.97 # the similarity used for clustering full-length sequences from different samples into OTUs\r\n    normalize_otu_table: true # output a normalized OTU table as well as non-normalized\r\n    read_mapping_percent: 0.90 # the percent identity that individual reads have to map with to be considered part of the reference\r\n    assign_taxonomy_method: blast\r\n    minimum_taxon_similarity: 0.90 # sequences that fall below this cutoff will be listed as no taxonomy\r\n    phrap:\r\n        minscore: 300\r\n        penalty: -9\r\n        gap_ext: -10\r\n        gap_init: -11\r\n        ace: True\r\n    fermi:\r\n        kmer_length: 200\r\n```\r\n### Tips for writing config files\r\nWriting out the full file path names in the configuration file can be a\r\nreal pain.  However you can reduce the burden on yourself by taking\r\nadvantage of some of the advanced features in the `vim` text editor.\r\nWhen in `INSERT` mode if you start typing a file path (like `~/`) and\r\nthen press CTRL-x CTRL-f, you'll get a popup menu of file paths!! You\r\ncan use this to quickly add in file names to your config file. \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}